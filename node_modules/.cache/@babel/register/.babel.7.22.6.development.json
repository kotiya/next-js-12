{"{\"assumptions\":{},\"sourceRoot\":\"/Users/weiranli/.npm/_npx/a0dc7465aefb54f9/node_modules/@next/codemod/transforms/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/private/var/folders/b4/nfmp_93x3b51md9m_8mh43g40000gn/T/second-repos/kotiya/next-js-12\",\"filename\":\"/Users/weiranli/.npm/_npx/a0dc7465aefb54f9/node_modules/@next/codemod/transforms/url-to-withrouter.js\",\"targets\":{},\"cloneInputAst\":true,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/private/var/folders/b4/nfmp_93x3b51md9m_8mh43g40000gn/T/second-repos/kotiya/next-js-12\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"EnumDeclaration\":{\"enter\":[null]},\"EnumBooleanBody\":{\"enter\":[null]},\"EnumNumberBody\":{\"enter\":[null]},\"EnumStringBody\":{\"enter\":[null]},\"EnumSymbolBody\":{\"enter\":[null]},\"EnumBooleanMember\":{\"enter\":[null]},\"EnumNumberMember\":{\"enter\":[null]},\"EnumStringMember\":{\"enter\":[null]},\"EnumDefaultedMember\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.22.6:development":{"value":{"code":"\"use strict\";\n\n// One-time usage file. You can delete me after running the codemod!\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction addWithRouterImport(j, root) {\n  // We create an import specifier, this is the value of an import, eg:\n  // import {withRouter} from 'next/router\n  // The specifier would be `withRouter`\n  const withRouterSpecifier = j.importSpecifier(j.identifier('withRouter'));\n  // Check if this file is already import `next/router`\n  // so that we can just attach `withRouter` instead of creating a new `import` node\n  const originalRouterImport = root.find(j.ImportDeclaration, {\n    source: {\n      value: 'next/router'\n    }\n  });\n  if (originalRouterImport.length > 0) {\n    // Check if `withRouter` is already imported. In that case we don't have to do anything\n    if (originalRouterImport.find(j.ImportSpecifier, {\n      imported: {\n        name: 'withRouter'\n      }\n    }).length > 0) {\n      return;\n    }\n    // Attach `withRouter` to the existing `next/router` import node\n    originalRouterImport.forEach(node => {\n      node.value.specifiers.push(withRouterSpecifier);\n    });\n    return;\n  }\n  // Create import node\n  // import {withRouter} from 'next/router'\n  const withRouterImport = j.importDeclaration([withRouterSpecifier], j.stringLiteral('next/router'));\n  // Find the Program, this is the top level AST node\n  const Program = root.find(j.Program);\n  // Attach the import at the top of the body\n  Program.forEach(node => {\n    node.value.body.unshift(withRouterImport);\n  });\n}\nfunction getThisPropsUrlNodes(j, tree) {\n  return tree.find(j.MemberExpression, {\n    object: {\n      type: 'MemberExpression',\n      object: {\n        type: 'ThisExpression'\n      },\n      property: {\n        name: 'props'\n      }\n    },\n    property: {\n      name: 'url'\n    }\n  });\n}\nfunction getPropsUrlNodes(j, tree, name) {\n  return tree.find(j.MemberExpression, {\n    object: {\n      name\n    },\n    property: {\n      name: 'url'\n    }\n  });\n}\n// Wraps the provided node in a function call\n// For example if `functionName` is `withRouter` it will wrap the provided node in `withRouter(NODE_CONTENT)`\nfunction wrapNodeInFunction(j, functionName, args) {\n  const mappedArgs = args.map(node => {\n    // If the node is a ClassDeclaration we have to turn it into a ClassExpression\n    // since ClassDeclarations can't be wrapped in a function\n    if (node.type === 'ClassDeclaration') {\n      node.type = 'ClassExpression';\n    }\n    return node;\n  });\n  return j.callExpression(j.identifier(functionName), mappedArgs);\n}\nfunction turnUrlIntoRouter(j, tree) {\n  tree.find(j.Identifier, {\n    name: 'url'\n  }).replaceWith(j.identifier('router'));\n}\nfunction transformer(file, api) {\n  // j is just a shorthand for the jscodeshift api\n  const j = api.jscodeshift;\n  // this is the AST root on which we can call methods like `.find`\n  const root = j(file.source);\n  // We search for `export default`\n  const defaultExports = root.find(j.ExportDefaultDeclaration);\n  // We loop over the `export default` instances\n  // This is just how jscodeshift works, there can only be one export default instance\n  defaultExports.forEach(rule => {\n    // rule.value is an AST node\n    const {\n      value: node\n    } = rule;\n    // declaration holds the AST node for what comes after `export default`\n    const {\n      declaration\n    } = node;\n    function wrapDefaultExportInWithRouter() {\n      if (j(rule).find(j.CallExpression, {\n        callee: {\n          name: 'withRouter'\n        }\n      }).length > 0) {\n        return;\n      }\n      j(rule).replaceWith(j.exportDefaultDeclaration(wrapNodeInFunction(j, 'withRouter', [declaration])));\n    }\n    // The `Identifier` type is given in this case:\n    // export default Test\n    // where `Test` is the identifier\n    if (declaration.type === 'Identifier') {\n      // the variable name\n      const {\n        name\n      } = declaration;\n      // find the implementation of the variable, can be a class, function, etc\n      let implementation = root.find(j.Declaration, {\n        id: {\n          name\n        }\n      });\n      if (implementation.length === 0) {\n        implementation = root.find(j.VariableDeclarator, {\n          id: {\n            name\n          }\n        });\n      }\n      implementation.find(j.Property, {\n        key: {\n          name: 'url'\n        }\n      }).forEach(propertyRule => {\n        const isThisPropsDestructure = j(propertyRule).closest(j.VariableDeclarator, {\n          init: {\n            object: {\n              type: 'ThisExpression'\n            },\n            property: {\n              name: 'props'\n            }\n          }\n        });\n        if (isThisPropsDestructure.length === 0) {\n          return;\n        }\n        const originalKeyValue = propertyRule.value.value.name;\n        propertyRule.value.key.name = 'router';\n        wrapDefaultExportInWithRouter();\n        addWithRouterImport(j, root);\n        // If the property is reassigned to another variable we don't have to transform it\n        if (originalKeyValue !== 'url') {\n          return;\n        }\n        propertyRule.value.value.name = 'router';\n        j(propertyRule).closest(j.BlockStatement).find(j.Identifier, identifierNode => {\n          if (identifierNode.type === 'JSXIdentifier') {\n            return false;\n          }\n          if (identifierNode.name !== 'url') {\n            return false;\n          }\n          return true;\n        }).replaceWith(j.identifier('router'));\n      });\n      // Find usage of `this.props.url`\n      const thisPropsUrlUsage = getThisPropsUrlNodes(j, implementation);\n      if (thisPropsUrlUsage.length === 0) {\n        return;\n      }\n      // rename `url` to `router`\n      turnUrlIntoRouter(j, thisPropsUrlUsage);\n      wrapDefaultExportInWithRouter();\n      addWithRouterImport(j, root);\n      return;\n    }\n    const arrowFunctions = j(rule).find(j.ArrowFunctionExpression);\n    (() => {\n      if (arrowFunctions.length === 0) {\n        return;\n      }\n      arrowFunctions.forEach(r => {\n        // This makes sure we don't match nested functions, only the top one\n        if (j(r).closest(j.Expression).length !== 0) {\n          return;\n        }\n        if (!r.value.params || !r.value.params[0]) {\n          return;\n        }\n        const name = r.value.params[0].name;\n        const propsUrlUsage = getPropsUrlNodes(j, j(r), name);\n        if (propsUrlUsage.length === 0) {\n          return;\n        }\n        turnUrlIntoRouter(j, propsUrlUsage);\n        wrapDefaultExportInWithRouter();\n        addWithRouterImport(j, root);\n      });\n      return;\n    })();\n    if (declaration.type === 'CallExpression') {\n      j(rule).find(j.CallExpression, haystack => {\n        const firstArgument = haystack.arguments[0] || {};\n        if (firstArgument.type === 'Identifier') {\n          return true;\n        }\n        return false;\n      }).forEach(callRule => {\n        const {\n          name\n        } = callRule.value.arguments[0];\n        // find the implementation of the variable, can be a class, function, etc\n        let implementation = root.find(j.Declaration, {\n          id: {\n            name\n          }\n        });\n        if (implementation.length === 0) {\n          implementation = root.find(j.VariableDeclarator, {\n            id: {\n              name\n            }\n          });\n        }\n        // Find usage of `this.props.url`\n        const thisPropsUrlUsage = getThisPropsUrlNodes(j, implementation);\n        implementation.find(j.Property, {\n          key: {\n            name: 'url'\n          }\n        }).forEach(propertyRule => {\n          const isThisPropsDestructure = j(propertyRule).closest(j.VariableDeclarator, {\n            init: {\n              object: {\n                type: 'ThisExpression'\n              },\n              property: {\n                name: 'props'\n              }\n            }\n          });\n          if (isThisPropsDestructure.length === 0) {\n            return;\n          }\n          const originalKeyValue = propertyRule.value.value.name;\n          propertyRule.value.key.name = 'router';\n          wrapDefaultExportInWithRouter();\n          addWithRouterImport(j, root);\n          // If the property is reassigned to another variable we don't have to transform it\n          if (originalKeyValue !== 'url') {\n            return;\n          }\n          propertyRule.value.value.name = 'router';\n          j(propertyRule).closest(j.BlockStatement).find(j.Identifier, identifierNode => {\n            if (identifierNode.type === 'JSXIdentifier') {\n              return false;\n            }\n            if (identifierNode.name !== 'url') {\n              return false;\n            }\n            return true;\n          }).replaceWith(j.identifier('router'));\n        });\n        if (thisPropsUrlUsage.length === 0) {\n          return;\n        }\n        // rename `url` to `router`\n        turnUrlIntoRouter(j, thisPropsUrlUsage);\n        wrapDefaultExportInWithRouter();\n        addWithRouterImport(j, root);\n        return;\n      });\n    }\n    j(rule).find(j.Property, {\n      key: {\n        name: 'url'\n      }\n    }).forEach(propertyRule => {\n      const isThisPropsDestructure = j(propertyRule).closest(j.VariableDeclarator, {\n        init: {\n          object: {\n            type: 'ThisExpression'\n          },\n          property: {\n            name: 'props'\n          }\n        }\n      });\n      if (isThisPropsDestructure.length === 0) {\n        return;\n      }\n      const originalKeyValue = propertyRule.value.value.name;\n      propertyRule.value.key.name = 'router';\n      wrapDefaultExportInWithRouter();\n      addWithRouterImport(j, root);\n      // If the property is reassigned to another variable we don't have to transform it\n      if (originalKeyValue !== 'url') {\n        return;\n      }\n      propertyRule.value.value.name = 'router';\n      j(propertyRule).closest(j.BlockStatement).find(j.Identifier, identifierNode => {\n        if (identifierNode.type === 'JSXIdentifier') {\n          return false;\n        }\n        if (identifierNode.name !== 'url') {\n          return false;\n        }\n        return true;\n      }).replaceWith(j.identifier('router'));\n    });\n    j(rule).find(j.MethodDefinition, {\n      key: {\n        name: 'componentWillReceiveProps'\n      }\n    }).forEach(methodRule => {\n      const func = methodRule.value.value;\n      if (!func.params[0]) {\n        return;\n      }\n      const firstArgumentName = func.params[0].name;\n      const propsUrlUsage = getPropsUrlNodes(j, j(methodRule), firstArgumentName);\n      turnUrlIntoRouter(j, propsUrlUsage);\n      if (propsUrlUsage.length === 0) {\n        return;\n      }\n      wrapDefaultExportInWithRouter();\n      addWithRouterImport(j, root);\n    });\n    j(rule).find(j.MethodDefinition, {\n      key: {\n        name: 'componentDidUpdate'\n      }\n    }).forEach(methodRule => {\n      const func = methodRule.value.value;\n      if (!func.params[0]) {\n        return;\n      }\n      const firstArgumentName = func.params[0].name;\n      const propsUrlUsage = getPropsUrlNodes(j, j(methodRule), firstArgumentName);\n      turnUrlIntoRouter(j, propsUrlUsage);\n      if (propsUrlUsage.length === 0) {\n        return;\n      }\n      wrapDefaultExportInWithRouter();\n      addWithRouterImport(j, root);\n    });\n    const thisPropsUrlUsage = getThisPropsUrlNodes(j, j(rule));\n    const propsUrlUsage = getPropsUrlNodes(j, j(rule), 'props');\n    // rename `url` to `router`\n    turnUrlIntoRouter(j, thisPropsUrlUsage);\n    turnUrlIntoRouter(j, propsUrlUsage);\n    if (thisPropsUrlUsage.length === 0 && propsUrlUsage.length === 0) {\n      return;\n    }\n    wrapDefaultExportInWithRouter();\n    addWithRouterImport(j, root);\n    return;\n  });\n  return root.toSource();\n}\nexports.default = transformer;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["Object","defineProperty","exports","value","addWithRouterImport","j","root","withRouterSpecifier","importSpecifier","identifier","originalRouterImport","find","ImportDeclaration","source","length","ImportSpecifier","imported","name","forEach","node","specifiers","push","withRouterImport","importDeclaration","stringLiteral","Program","body","unshift","getThisPropsUrlNodes","tree","MemberExpression","object","type","property","getPropsUrlNodes","wrapNodeInFunction","functionName","args","mappedArgs","map","callExpression","turnUrlIntoRouter","Identifier","replaceWith","transformer","file","api","jscodeshift","defaultExports","ExportDefaultDeclaration","rule","declaration","wrapDefaultExportInWithRouter","CallExpression","callee","exportDefaultDeclaration","implementation","Declaration","id","VariableDeclarator","Property","key","propertyRule","isThisPropsDestructure","closest","init","originalKeyValue","BlockStatement","identifierNode","thisPropsUrlUsage","arrowFunctions","ArrowFunctionExpression","r","Expression","params","propsUrlUsage","haystack","firstArgument","arguments","callRule","MethodDefinition","methodRule","func","firstArgumentName","toSource","default"],"sourceRoot":"/Users/weiranli/.npm/_npx/a0dc7465aefb54f9/node_modules/@next/codemod/transforms/","sources":["url-to-withrouter.js"],"sourcesContent":["\"use strict\";\n// One-time usage file. You can delete me after running the codemod!\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction addWithRouterImport(j, root) {\n    // We create an import specifier, this is the value of an import, eg:\n    // import {withRouter} from 'next/router\n    // The specifier would be `withRouter`\n    const withRouterSpecifier = j.importSpecifier(j.identifier('withRouter'));\n    // Check if this file is already import `next/router`\n    // so that we can just attach `withRouter` instead of creating a new `import` node\n    const originalRouterImport = root.find(j.ImportDeclaration, {\n        source: {\n            value: 'next/router',\n        },\n    });\n    if (originalRouterImport.length > 0) {\n        // Check if `withRouter` is already imported. In that case we don't have to do anything\n        if (originalRouterImport.find(j.ImportSpecifier, {\n            imported: { name: 'withRouter' },\n        }).length > 0) {\n            return;\n        }\n        // Attach `withRouter` to the existing `next/router` import node\n        originalRouterImport.forEach((node) => {\n            node.value.specifiers.push(withRouterSpecifier);\n        });\n        return;\n    }\n    // Create import node\n    // import {withRouter} from 'next/router'\n    const withRouterImport = j.importDeclaration([withRouterSpecifier], j.stringLiteral('next/router'));\n    // Find the Program, this is the top level AST node\n    const Program = root.find(j.Program);\n    // Attach the import at the top of the body\n    Program.forEach((node) => {\n        node.value.body.unshift(withRouterImport);\n    });\n}\nfunction getThisPropsUrlNodes(j, tree) {\n    return tree.find(j.MemberExpression, {\n        object: {\n            type: 'MemberExpression',\n            object: { type: 'ThisExpression' },\n            property: { name: 'props' },\n        },\n        property: { name: 'url' },\n    });\n}\nfunction getPropsUrlNodes(j, tree, name) {\n    return tree.find(j.MemberExpression, {\n        object: { name },\n        property: { name: 'url' },\n    });\n}\n// Wraps the provided node in a function call\n// For example if `functionName` is `withRouter` it will wrap the provided node in `withRouter(NODE_CONTENT)`\nfunction wrapNodeInFunction(j, functionName, args) {\n    const mappedArgs = args.map((node) => {\n        // If the node is a ClassDeclaration we have to turn it into a ClassExpression\n        // since ClassDeclarations can't be wrapped in a function\n        if (node.type === 'ClassDeclaration') {\n            node.type = 'ClassExpression';\n        }\n        return node;\n    });\n    return j.callExpression(j.identifier(functionName), mappedArgs);\n}\nfunction turnUrlIntoRouter(j, tree) {\n    tree.find(j.Identifier, { name: 'url' }).replaceWith(j.identifier('router'));\n}\nfunction transformer(file, api) {\n    // j is just a shorthand for the jscodeshift api\n    const j = api.jscodeshift;\n    // this is the AST root on which we can call methods like `.find`\n    const root = j(file.source);\n    // We search for `export default`\n    const defaultExports = root.find(j.ExportDefaultDeclaration);\n    // We loop over the `export default` instances\n    // This is just how jscodeshift works, there can only be one export default instance\n    defaultExports.forEach((rule) => {\n        // rule.value is an AST node\n        const { value: node } = rule;\n        // declaration holds the AST node for what comes after `export default`\n        const { declaration } = node;\n        function wrapDefaultExportInWithRouter() {\n            if (j(rule).find(j.CallExpression, { callee: { name: 'withRouter' } })\n                .length > 0) {\n                return;\n            }\n            j(rule).replaceWith(j.exportDefaultDeclaration(wrapNodeInFunction(j, 'withRouter', [declaration])));\n        }\n        // The `Identifier` type is given in this case:\n        // export default Test\n        // where `Test` is the identifier\n        if (declaration.type === 'Identifier') {\n            // the variable name\n            const { name } = declaration;\n            // find the implementation of the variable, can be a class, function, etc\n            let implementation = root.find(j.Declaration, { id: { name } });\n            if (implementation.length === 0) {\n                implementation = root.find(j.VariableDeclarator, { id: { name } });\n            }\n            implementation\n                .find(j.Property, { key: { name: 'url' } })\n                .forEach((propertyRule) => {\n                const isThisPropsDestructure = j(propertyRule).closest(j.VariableDeclarator, {\n                    init: {\n                        object: {\n                            type: 'ThisExpression',\n                        },\n                        property: { name: 'props' },\n                    },\n                });\n                if (isThisPropsDestructure.length === 0) {\n                    return;\n                }\n                const originalKeyValue = propertyRule.value.value.name;\n                propertyRule.value.key.name = 'router';\n                wrapDefaultExportInWithRouter();\n                addWithRouterImport(j, root);\n                // If the property is reassigned to another variable we don't have to transform it\n                if (originalKeyValue !== 'url') {\n                    return;\n                }\n                propertyRule.value.value.name = 'router';\n                j(propertyRule)\n                    .closest(j.BlockStatement)\n                    .find(j.Identifier, (identifierNode) => {\n                    if (identifierNode.type === 'JSXIdentifier') {\n                        return false;\n                    }\n                    if (identifierNode.name !== 'url') {\n                        return false;\n                    }\n                    return true;\n                })\n                    .replaceWith(j.identifier('router'));\n            });\n            // Find usage of `this.props.url`\n            const thisPropsUrlUsage = getThisPropsUrlNodes(j, implementation);\n            if (thisPropsUrlUsage.length === 0) {\n                return;\n            }\n            // rename `url` to `router`\n            turnUrlIntoRouter(j, thisPropsUrlUsage);\n            wrapDefaultExportInWithRouter();\n            addWithRouterImport(j, root);\n            return;\n        }\n        const arrowFunctions = j(rule).find(j.ArrowFunctionExpression);\n        (() => {\n            if (arrowFunctions.length === 0) {\n                return;\n            }\n            arrowFunctions.forEach((r) => {\n                // This makes sure we don't match nested functions, only the top one\n                if (j(r).closest(j.Expression).length !== 0) {\n                    return;\n                }\n                if (!r.value.params || !r.value.params[0]) {\n                    return;\n                }\n                const name = r.value.params[0].name;\n                const propsUrlUsage = getPropsUrlNodes(j, j(r), name);\n                if (propsUrlUsage.length === 0) {\n                    return;\n                }\n                turnUrlIntoRouter(j, propsUrlUsage);\n                wrapDefaultExportInWithRouter();\n                addWithRouterImport(j, root);\n            });\n            return;\n        })();\n        if (declaration.type === 'CallExpression') {\n            j(rule)\n                .find(j.CallExpression, (haystack) => {\n                const firstArgument = haystack.arguments[0] || {};\n                if (firstArgument.type === 'Identifier') {\n                    return true;\n                }\n                return false;\n            })\n                .forEach((callRule) => {\n                const { name } = callRule.value.arguments[0];\n                // find the implementation of the variable, can be a class, function, etc\n                let implementation = root.find(j.Declaration, { id: { name } });\n                if (implementation.length === 0) {\n                    implementation = root.find(j.VariableDeclarator, { id: { name } });\n                }\n                // Find usage of `this.props.url`\n                const thisPropsUrlUsage = getThisPropsUrlNodes(j, implementation);\n                implementation\n                    .find(j.Property, { key: { name: 'url' } })\n                    .forEach((propertyRule) => {\n                    const isThisPropsDestructure = j(propertyRule).closest(j.VariableDeclarator, {\n                        init: {\n                            object: {\n                                type: 'ThisExpression',\n                            },\n                            property: { name: 'props' },\n                        },\n                    });\n                    if (isThisPropsDestructure.length === 0) {\n                        return;\n                    }\n                    const originalKeyValue = propertyRule.value.value.name;\n                    propertyRule.value.key.name = 'router';\n                    wrapDefaultExportInWithRouter();\n                    addWithRouterImport(j, root);\n                    // If the property is reassigned to another variable we don't have to transform it\n                    if (originalKeyValue !== 'url') {\n                        return;\n                    }\n                    propertyRule.value.value.name = 'router';\n                    j(propertyRule)\n                        .closest(j.BlockStatement)\n                        .find(j.Identifier, (identifierNode) => {\n                        if (identifierNode.type === 'JSXIdentifier') {\n                            return false;\n                        }\n                        if (identifierNode.name !== 'url') {\n                            return false;\n                        }\n                        return true;\n                    })\n                        .replaceWith(j.identifier('router'));\n                });\n                if (thisPropsUrlUsage.length === 0) {\n                    return;\n                }\n                // rename `url` to `router`\n                turnUrlIntoRouter(j, thisPropsUrlUsage);\n                wrapDefaultExportInWithRouter();\n                addWithRouterImport(j, root);\n                return;\n            });\n        }\n        j(rule)\n            .find(j.Property, { key: { name: 'url' } })\n            .forEach((propertyRule) => {\n            const isThisPropsDestructure = j(propertyRule).closest(j.VariableDeclarator, {\n                init: {\n                    object: {\n                        type: 'ThisExpression',\n                    },\n                    property: { name: 'props' },\n                },\n            });\n            if (isThisPropsDestructure.length === 0) {\n                return;\n            }\n            const originalKeyValue = propertyRule.value.value.name;\n            propertyRule.value.key.name = 'router';\n            wrapDefaultExportInWithRouter();\n            addWithRouterImport(j, root);\n            // If the property is reassigned to another variable we don't have to transform it\n            if (originalKeyValue !== 'url') {\n                return;\n            }\n            propertyRule.value.value.name = 'router';\n            j(propertyRule)\n                .closest(j.BlockStatement)\n                .find(j.Identifier, (identifierNode) => {\n                if (identifierNode.type === 'JSXIdentifier') {\n                    return false;\n                }\n                if (identifierNode.name !== 'url') {\n                    return false;\n                }\n                return true;\n            })\n                .replaceWith(j.identifier('router'));\n        });\n        j(rule)\n            .find(j.MethodDefinition, { key: { name: 'componentWillReceiveProps' } })\n            .forEach((methodRule) => {\n            const func = methodRule.value.value;\n            if (!func.params[0]) {\n                return;\n            }\n            const firstArgumentName = func.params[0].name;\n            const propsUrlUsage = getPropsUrlNodes(j, j(methodRule), firstArgumentName);\n            turnUrlIntoRouter(j, propsUrlUsage);\n            if (propsUrlUsage.length === 0) {\n                return;\n            }\n            wrapDefaultExportInWithRouter();\n            addWithRouterImport(j, root);\n        });\n        j(rule)\n            .find(j.MethodDefinition, { key: { name: 'componentDidUpdate' } })\n            .forEach((methodRule) => {\n            const func = methodRule.value.value;\n            if (!func.params[0]) {\n                return;\n            }\n            const firstArgumentName = func.params[0].name;\n            const propsUrlUsage = getPropsUrlNodes(j, j(methodRule), firstArgumentName);\n            turnUrlIntoRouter(j, propsUrlUsage);\n            if (propsUrlUsage.length === 0) {\n                return;\n            }\n            wrapDefaultExportInWithRouter();\n            addWithRouterImport(j, root);\n        });\n        const thisPropsUrlUsage = getThisPropsUrlNodes(j, j(rule));\n        const propsUrlUsage = getPropsUrlNodes(j, j(rule), 'props');\n        // rename `url` to `router`\n        turnUrlIntoRouter(j, thisPropsUrlUsage);\n        turnUrlIntoRouter(j, propsUrlUsage);\n        if (thisPropsUrlUsage.length === 0 && propsUrlUsage.length === 0) {\n            return;\n        }\n        wrapDefaultExportInWithRouter();\n        addWithRouterImport(j, root);\n        return;\n    });\n    return root.toSource();\n}\nexports.default = transformer;\n//# sourceMappingURL=url-to-withrouter.js.map"],"mappings":"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"}},"mtime":1688594536259},"{\"assumptions\":{},\"sourceRoot\":\"/Users/weiranli/.npm/_npx/a0dc7465aefb54f9/node_modules/@next/codemod/transforms/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/private/var/folders/b4/nfmp_93x3b51md9m_8mh43g40000gn/T/second-repos/kotiya/next-js-12\",\"filename\":\"/Users/weiranli/.npm/_npx/a0dc7465aefb54f9/node_modules/@next/codemod/transforms/withamp-to-config.js\",\"targets\":{},\"cloneInputAst\":true,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/private/var/folders/b4/nfmp_93x3b51md9m_8mh43g40000gn/T/second-repos/kotiya/next-js-12\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"EnumDeclaration\":{\"enter\":[null]},\"EnumBooleanBody\":{\"enter\":[null]},\"EnumNumberBody\":{\"enter\":[null]},\"EnumStringBody\":{\"enter\":[null]},\"EnumSymbolBody\":{\"enter\":[null]},\"EnumBooleanMember\":{\"enter\":[null]},\"EnumNumberMember\":{\"enter\":[null]},\"EnumStringMember\":{\"enter\":[null]},\"EnumDefaultedMember\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.22.6:development":{"value":{"code":"\"use strict\";\n\n// One-time usage file. You can delete me after running the codemod!\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction injectAmp(j, o, desiredAmpValue) {\n  const init = o.node.init;\n  switch (init.type) {\n    case 'ObjectExpression':\n      {\n        const overwroteAmpKey = init.properties.some(prop => {\n          switch (prop.type) {\n            case 'Property':\n            case 'ObjectProperty':\n              if (!(prop.key.type === 'Identifier' && prop.key.name === 'amp')) {\n                return false;\n              }\n              prop.value = desiredAmpValue;\n              return true;\n            default:\n              return false;\n          }\n        });\n        if (!overwroteAmpKey) {\n          init.properties.push(j.objectProperty(j.identifier('amp'), desiredAmpValue));\n        }\n        return true;\n      }\n    default:\n      {\n        return false;\n      }\n  }\n}\nfunction transformer(file, api) {\n  const j = api.jscodeshift.withParser('tsx');\n  const root = j(file.source);\n  const done = () => root.toSource();\n  const imports = root.find(j.ImportDeclaration, {\n    source: {\n      value: 'next/amp'\n    }\n  });\n  if (imports.length < 1) {\n    return;\n  }\n  let hadWithAmp = false;\n  const ampImportNames = [];\n  imports.forEach(ampImport => {\n    const ampImportShift = j(ampImport);\n    const withAmpImport = ampImportShift.find(j.ImportSpecifier, {\n      imported: {\n        name: 'withAmp'\n      }\n    });\n    if (withAmpImport.length < 1) {\n      return;\n    }\n    hadWithAmp = true;\n    withAmpImport.forEach(element => {\n      ampImportNames.push(element.value.local.name);\n      j(element).remove();\n    });\n    if (ampImport.value.specifiers.length === 0) {\n      ampImportShift.remove();\n    }\n  });\n  if (!hadWithAmp) {\n    return done();\n  }\n  const defaultExportsShift = root.find(j.ExportDefaultDeclaration);\n  if (defaultExportsShift.length < 1) {\n    return done();\n  }\n  let desiredAmpValue = j.booleanLiteral(true);\n  const defaultExport = defaultExportsShift.nodes()[0];\n  const removedWrapper = ampImportNames.some(ampImportName => {\n    const ampWrapping = j(defaultExport).find(j.CallExpression, {\n      callee: {\n        name: ampImportName\n      }\n    });\n    if (ampWrapping.length < 1) {\n      return false;\n    }\n    ampWrapping.forEach(e => {\n      if (e.value.arguments.length < 1) {\n        j(e).remove();\n      } else {\n        const withAmpOptions = e.value.arguments[1];\n        if (withAmpOptions && withAmpOptions.type === 'ObjectExpression') {\n          const isHybrid = withAmpOptions.properties.some(prop => {\n            if (!(prop.type === 'Property' || prop.type === 'ObjectProperty')) {\n              return false;\n            }\n            if (!(prop.key && prop.key.name === 'hybrid')) {\n              return false;\n            }\n            return (prop.value.type === 'Literal' || prop.value.type === 'BooleanLiteral') && prop.value.value === true;\n          });\n          if (isHybrid) {\n            desiredAmpValue = j.stringLiteral('hybrid');\n          }\n        }\n        j(e).replaceWith(e.value.arguments[0]);\n      }\n    });\n    return true;\n  });\n  if (!removedWrapper) {\n    return done();\n  }\n  const namedExportsShift = root.find(j.ExportNamedDeclaration);\n  const hadExistingConfig = namedExportsShift.some(namedExport => {\n    const configExportedObject = j(namedExport).find(j.VariableDeclarator, {\n      id: {\n        name: 'config'\n      }\n    });\n    if (configExportedObject.length > 0) {\n      return configExportedObject.some(exportedObject => injectAmp(j, exportedObject, desiredAmpValue));\n    }\n    const configReexported = j(namedExport).find(j.ExportSpecifier, {\n      local: {\n        name: 'config'\n      }\n    });\n    if (configReexported.length > 0) {\n      const configObjects = root.findVariableDeclarators('config').filter(el => el.scope.isGlobal);\n      return configObjects.some(configObject => injectAmp(j, configObject, desiredAmpValue));\n    }\n    return false;\n  });\n  if (!hadExistingConfig) {\n    defaultExportsShift.insertAfter(j.exportNamedDeclaration(j.variableDeclaration('const', [j.variableDeclarator(j.identifier('config'), j.objectExpression([j.objectProperty(j.identifier('amp'), desiredAmpValue)]))])));\n  }\n  return done();\n}\nexports.default = transformer;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["Object","defineProperty","exports","value","injectAmp","j","o","desiredAmpValue","init","node","type","overwroteAmpKey","properties","some","prop","key","name","push","objectProperty","identifier","transformer","file","api","jscodeshift","withParser","root","source","done","toSource","imports","find","ImportDeclaration","length","hadWithAmp","ampImportNames","forEach","ampImport","ampImportShift","withAmpImport","ImportSpecifier","imported","element","local","remove","specifiers","defaultExportsShift","ExportDefaultDeclaration","booleanLiteral","defaultExport","nodes","removedWrapper","ampImportName","ampWrapping","CallExpression","callee","e","arguments","withAmpOptions","isHybrid","stringLiteral","replaceWith","namedExportsShift","ExportNamedDeclaration","hadExistingConfig","namedExport","configExportedObject","VariableDeclarator","id","exportedObject","configReexported","ExportSpecifier","configObjects","findVariableDeclarators","filter","el","scope","isGlobal","configObject","insertAfter","exportNamedDeclaration","variableDeclaration","variableDeclarator","objectExpression","default"],"sourceRoot":"/Users/weiranli/.npm/_npx/a0dc7465aefb54f9/node_modules/@next/codemod/transforms/","sources":["withamp-to-config.js"],"sourcesContent":["\"use strict\";\n// One-time usage file. You can delete me after running the codemod!\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction injectAmp(j, o, desiredAmpValue) {\n    const init = o.node.init;\n    switch (init.type) {\n        case 'ObjectExpression': {\n            const overwroteAmpKey = init.properties.some((prop) => {\n                switch (prop.type) {\n                    case 'Property':\n                    case 'ObjectProperty':\n                        if (!(prop.key.type === 'Identifier' && prop.key.name === 'amp')) {\n                            return false;\n                        }\n                        prop.value = desiredAmpValue;\n                        return true;\n                    default:\n                        return false;\n                }\n            });\n            if (!overwroteAmpKey) {\n                init.properties.push(j.objectProperty(j.identifier('amp'), desiredAmpValue));\n            }\n            return true;\n        }\n        default: {\n            return false;\n        }\n    }\n}\nfunction transformer(file, api) {\n    const j = api.jscodeshift.withParser('tsx');\n    const root = j(file.source);\n    const done = () => root.toSource();\n    const imports = root.find(j.ImportDeclaration, {\n        source: { value: 'next/amp' },\n    });\n    if (imports.length < 1) {\n        return;\n    }\n    let hadWithAmp = false;\n    const ampImportNames = [];\n    imports.forEach((ampImport) => {\n        const ampImportShift = j(ampImport);\n        const withAmpImport = ampImportShift.find(j.ImportSpecifier, {\n            imported: { name: 'withAmp' },\n        });\n        if (withAmpImport.length < 1) {\n            return;\n        }\n        hadWithAmp = true;\n        withAmpImport.forEach((element) => {\n            ampImportNames.push(element.value.local.name);\n            j(element).remove();\n        });\n        if (ampImport.value.specifiers.length === 0) {\n            ampImportShift.remove();\n        }\n    });\n    if (!hadWithAmp) {\n        return done();\n    }\n    const defaultExportsShift = root.find(j.ExportDefaultDeclaration);\n    if (defaultExportsShift.length < 1) {\n        return done();\n    }\n    let desiredAmpValue = j.booleanLiteral(true);\n    const defaultExport = defaultExportsShift.nodes()[0];\n    const removedWrapper = ampImportNames.some((ampImportName) => {\n        const ampWrapping = j(defaultExport).find(j.CallExpression, {\n            callee: { name: ampImportName },\n        });\n        if (ampWrapping.length < 1) {\n            return false;\n        }\n        ampWrapping.forEach((e) => {\n            if (e.value.arguments.length < 1) {\n                j(e).remove();\n            }\n            else {\n                const withAmpOptions = e.value.arguments[1];\n                if (withAmpOptions && withAmpOptions.type === 'ObjectExpression') {\n                    const isHybrid = withAmpOptions.properties.some((prop) => {\n                        if (!(prop.type === 'Property' || prop.type === 'ObjectProperty')) {\n                            return false;\n                        }\n                        if (!(prop.key && prop.key.name === 'hybrid')) {\n                            return false;\n                        }\n                        return ((prop.value.type === 'Literal' ||\n                            prop.value.type === 'BooleanLiteral') &&\n                            prop.value.value === true);\n                    });\n                    if (isHybrid) {\n                        desiredAmpValue = j.stringLiteral('hybrid');\n                    }\n                }\n                j(e).replaceWith(e.value.arguments[0]);\n            }\n        });\n        return true;\n    });\n    if (!removedWrapper) {\n        return done();\n    }\n    const namedExportsShift = root.find(j.ExportNamedDeclaration);\n    const hadExistingConfig = namedExportsShift.some((namedExport) => {\n        const configExportedObject = j(namedExport).find(j.VariableDeclarator, {\n            id: { name: 'config' },\n        });\n        if (configExportedObject.length > 0) {\n            return configExportedObject.some((exportedObject) => injectAmp(j, exportedObject, desiredAmpValue));\n        }\n        const configReexported = j(namedExport).find(j.ExportSpecifier, {\n            local: { name: 'config' },\n        });\n        if (configReexported.length > 0) {\n            const configObjects = root\n                .findVariableDeclarators('config')\n                .filter((el) => el.scope.isGlobal);\n            return configObjects.some((configObject) => injectAmp(j, configObject, desiredAmpValue));\n        }\n        return false;\n    });\n    if (!hadExistingConfig) {\n        defaultExportsShift.insertAfter(j.exportNamedDeclaration(j.variableDeclaration('const', [\n            j.variableDeclarator(j.identifier('config'), j.objectExpression([\n                j.objectProperty(j.identifier('amp'), desiredAmpValue),\n            ])),\n        ])));\n    }\n    return done();\n}\nexports.default = transformer;\n//# sourceMappingURL=withamp-to-config.js.map"],"mappings":"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"}},"mtime":1688594536259},"{\"assumptions\":{},\"sourceRoot\":\"/Users/weiranli/.npm/_npx/a0dc7465aefb54f9/node_modules/jscodeshift/parser/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/private/var/folders/b4/nfmp_93x3b51md9m_8mh43g40000gn/T/second-repos/kotiya/next-js-12\",\"filename\":\"/Users/weiranli/.npm/_npx/a0dc7465aefb54f9/node_modules/jscodeshift/parser/tsx.js\",\"targets\":{},\"cloneInputAst\":true,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/private/var/folders/b4/nfmp_93x3b51md9m_8mh43g40000gn/T/second-repos/kotiya/next-js-12\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"EnumDeclaration\":{\"enter\":[null]},\"EnumBooleanBody\":{\"enter\":[null]},\"EnumNumberBody\":{\"enter\":[null]},\"EnumStringBody\":{\"enter\":[null]},\"EnumSymbolBody\":{\"enter\":[null]},\"EnumBooleanMember\":{\"enter\":[null]},\"EnumNumberMember\":{\"enter\":[null]},\"EnumStringMember\":{\"enter\":[null]},\"EnumDefaultedMember\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.22.6:development":{"value":{"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nconst babylon = require('@babel/parser');\nconst baseOptions = require('./tsOptions');\nconst options = Object.assign({}, baseOptions);\noptions.plugins = ['jsx'].concat(baseOptions.plugins);\n\n/**\n * Doesn't accept custom options because babylon should be used directly in\n * that case.\n */\nmodule.exports = function () {\n  return {\n    parse(code) {\n      return babylon.parse(code, options);\n    }\n  };\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJiYWJ5bG9uIiwicmVxdWlyZSIsImJhc2VPcHRpb25zIiwib3B0aW9ucyIsIk9iamVjdCIsImFzc2lnbiIsInBsdWdpbnMiLCJjb25jYXQiLCJtb2R1bGUiLCJleHBvcnRzIiwicGFyc2UiLCJjb2RlIl0sInNvdXJjZVJvb3QiOiIvVXNlcnMvd2VpcmFubGkvLm5wbS9fbnB4L2EwZGM3NDY1YWVmYjU0Zjkvbm9kZV9tb2R1bGVzL2pzY29kZXNoaWZ0L3BhcnNlci8iLCJzb3VyY2VzIjpbInRzeC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBiYWJ5bG9uID0gcmVxdWlyZSgnQGJhYmVsL3BhcnNlcicpO1xuY29uc3QgYmFzZU9wdGlvbnMgPSByZXF1aXJlKCcuL3RzT3B0aW9ucycpO1xuXG5jb25zdCBvcHRpb25zID0gT2JqZWN0LmFzc2lnbih7fSwgYmFzZU9wdGlvbnMpO1xub3B0aW9ucy5wbHVnaW5zID0gWydqc3gnXS5jb25jYXQoYmFzZU9wdGlvbnMucGx1Z2lucyk7XG5cbi8qKlxuICogRG9lc24ndCBhY2NlcHQgY3VzdG9tIG9wdGlvbnMgYmVjYXVzZSBiYWJ5bG9uIHNob3VsZCBiZSB1c2VkIGRpcmVjdGx5IGluXG4gKiB0aGF0IGNhc2UuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB7XG4gICAgcGFyc2UoY29kZSkge1xuICAgICAgcmV0dXJuIGJhYnlsb24ucGFyc2UoY29kZSwgb3B0aW9ucyk7XG4gICAgfSxcbiAgfTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxZQUFZOztBQUVaLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLGVBQWUsQ0FBQztBQUN4QyxNQUFNQyxXQUFXLEdBQUdELE9BQU8sQ0FBQyxhQUFhLENBQUM7QUFFMUMsTUFBTUUsT0FBTyxHQUFHQyxNQUFNLENBQUNDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRUgsV0FBVyxDQUFDO0FBQzlDQyxPQUFPLENBQUNHLE9BQU8sR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDQyxNQUFNLENBQUNMLFdBQVcsQ0FBQ0ksT0FBTyxDQUFDOztBQUVyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBRSxNQUFNLENBQUNDLE9BQU8sR0FBRyxZQUFXO0VBQzFCLE9BQU87SUFDTEMsS0FBS0EsQ0FBQ0MsSUFBSSxFQUFFO01BQ1YsT0FBT1gsT0FBTyxDQUFDVSxLQUFLLENBQUNDLElBQUksRUFBRVIsT0FBTyxDQUFDO0lBQ3JDO0VBQ0YsQ0FBQztBQUNILENBQUMifQ==","map":{"version":3,"names":["babylon","require","baseOptions","options","Object","assign","plugins","concat","module","exports","parse","code"],"sourceRoot":"/Users/weiranli/.npm/_npx/a0dc7465aefb54f9/node_modules/jscodeshift/parser/","sources":["tsx.js"],"sourcesContent":["\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nconst babylon = require('@babel/parser');\nconst baseOptions = require('./tsOptions');\n\nconst options = Object.assign({}, baseOptions);\noptions.plugins = ['jsx'].concat(baseOptions.plugins);\n\n/**\n * Doesn't accept custom options because babylon should be used directly in\n * that case.\n */\nmodule.exports = function() {\n  return {\n    parse(code) {\n      return babylon.parse(code, options);\n    },\n  };\n};\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,OAAO,GAAGC,OAAO,CAAC,eAAe,CAAC;AACxC,MAAMC,WAAW,GAAGD,OAAO,CAAC,aAAa,CAAC;AAE1C,MAAME,OAAO,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEH,WAAW,CAAC;AAC9CC,OAAO,CAACG,OAAO,GAAG,CAAC,KAAK,CAAC,CAACC,MAAM,CAACL,WAAW,CAACI,OAAO,CAAC;;AAErD;AACA;AACA;AACA;AACAE,MAAM,CAACC,OAAO,GAAG,YAAW;EAC1B,OAAO;IACLC,KAAKA,CAACC,IAAI,EAAE;MACV,OAAOX,OAAO,CAACU,KAAK,CAACC,IAAI,EAAER,OAAO,CAAC;IACrC;EACF,CAAC;AACH,CAAC"}},"mtime":1688594536103},"{\"assumptions\":{},\"sourceRoot\":\"/Users/weiranli/.npm/_npx/a0dc7465aefb54f9/node_modules/jscodeshift/parser/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/private/var/folders/b4/nfmp_93x3b51md9m_8mh43g40000gn/T/second-repos/kotiya/next-js-12\",\"filename\":\"/Users/weiranli/.npm/_npx/a0dc7465aefb54f9/node_modules/jscodeshift/parser/tsOptions.js\",\"targets\":{},\"cloneInputAst\":true,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/private/var/folders/b4/nfmp_93x3b51md9m_8mh43g40000gn/T/second-repos/kotiya/next-js-12\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"EnumDeclaration\":{\"enter\":[null]},\"EnumBooleanBody\":{\"enter\":[null]},\"EnumNumberBody\":{\"enter\":[null]},\"EnumStringBody\":{\"enter\":[null]},\"EnumSymbolBody\":{\"enter\":[null]},\"EnumBooleanMember\":{\"enter\":[null]},\"EnumNumberMember\":{\"enter\":[null]},\"EnumStringMember\":{\"enter\":[null]},\"EnumDefaultedMember\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.22.6:development":{"value":{"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Options shared by the TypeScript and TSX parsers.\n */\nmodule.exports = {\n  sourceType: 'module',\n  allowImportExportEverywhere: true,\n  allowReturnOutsideFunction: true,\n  startLine: 1,\n  tokens: true,\n  plugins: ['asyncGenerators', 'bigInt', 'classPrivateMethods', 'classPrivateProperties', 'classProperties', 'decorators-legacy', 'doExpressions', 'dynamicImport', 'exportDefaultFrom', 'exportExtensions', 'exportNamespaceFrom', 'functionBind', 'functionSent', 'importMeta', 'nullishCoalescingOperator', 'numericSeparator', 'objectRestSpread', 'optionalCatchBinding', 'optionalChaining', ['pipelineOperator', {\n    proposal: 'minimal'\n  }], 'throwExpressions', 'typescript']\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic291cmNlVHlwZSIsImFsbG93SW1wb3J0RXhwb3J0RXZlcnl3aGVyZSIsImFsbG93UmV0dXJuT3V0c2lkZUZ1bmN0aW9uIiwic3RhcnRMaW5lIiwidG9rZW5zIiwicGx1Z2lucyIsInByb3Bvc2FsIl0sInNvdXJjZVJvb3QiOiIvVXNlcnMvd2VpcmFubGkvLm5wbS9fbnB4L2EwZGM3NDY1YWVmYjU0Zjkvbm9kZV9tb2R1bGVzL2pzY29kZXNoaWZ0L3BhcnNlci8iLCJzb3VyY2VzIjpbInRzT3B0aW9ucy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIE9wdGlvbnMgc2hhcmVkIGJ5IHRoZSBUeXBlU2NyaXB0IGFuZCBUU1ggcGFyc2Vycy5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHNvdXJjZVR5cGU6ICdtb2R1bGUnLFxuICBhbGxvd0ltcG9ydEV4cG9ydEV2ZXJ5d2hlcmU6IHRydWUsXG4gIGFsbG93UmV0dXJuT3V0c2lkZUZ1bmN0aW9uOiB0cnVlLFxuICBzdGFydExpbmU6IDEsXG4gIHRva2VuczogdHJ1ZSxcbiAgcGx1Z2luczogW1xuICAgICdhc3luY0dlbmVyYXRvcnMnLFxuICAgICdiaWdJbnQnLFxuICAgICdjbGFzc1ByaXZhdGVNZXRob2RzJyxcbiAgICAnY2xhc3NQcml2YXRlUHJvcGVydGllcycsXG4gICAgJ2NsYXNzUHJvcGVydGllcycsXG4gICAgJ2RlY29yYXRvcnMtbGVnYWN5JyxcbiAgICAnZG9FeHByZXNzaW9ucycsXG4gICAgJ2R5bmFtaWNJbXBvcnQnLFxuICAgICdleHBvcnREZWZhdWx0RnJvbScsXG4gICAgJ2V4cG9ydEV4dGVuc2lvbnMnLFxuICAgICdleHBvcnROYW1lc3BhY2VGcm9tJyxcbiAgICAnZnVuY3Rpb25CaW5kJyxcbiAgICAnZnVuY3Rpb25TZW50JyxcbiAgICAnaW1wb3J0TWV0YScsXG4gICAgJ251bGxpc2hDb2FsZXNjaW5nT3BlcmF0b3InLFxuICAgICdudW1lcmljU2VwYXJhdG9yJyxcbiAgICAnb2JqZWN0UmVzdFNwcmVhZCcsXG4gICAgJ29wdGlvbmFsQ2F0Y2hCaW5kaW5nJyxcbiAgICAnb3B0aW9uYWxDaGFpbmluZycsXG4gICAgWydwaXBlbGluZU9wZXJhdG9yJywgeyBwcm9wb3NhbDogJ21pbmltYWwnIH1dLFxuICAgICd0aHJvd0V4cHJlc3Npb25zJyxcbiAgICAndHlwZXNjcmlwdCdcbiAgXSxcbn07XG4iXSwibWFwcGluZ3MiOiJBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxZQUFZOztBQUVaO0FBQ0E7QUFDQTtBQUNBQSxNQUFNLENBQUNDLE9BQU8sR0FBRztFQUNmQyxVQUFVLEVBQUUsUUFBUTtFQUNwQkMsMkJBQTJCLEVBQUUsSUFBSTtFQUNqQ0MsMEJBQTBCLEVBQUUsSUFBSTtFQUNoQ0MsU0FBUyxFQUFFLENBQUM7RUFDWkMsTUFBTSxFQUFFLElBQUk7RUFDWkMsT0FBTyxFQUFFLENBQ1AsaUJBQWlCLEVBQ2pCLFFBQVEsRUFDUixxQkFBcUIsRUFDckIsd0JBQXdCLEVBQ3hCLGlCQUFpQixFQUNqQixtQkFBbUIsRUFDbkIsZUFBZSxFQUNmLGVBQWUsRUFDZixtQkFBbUIsRUFDbkIsa0JBQWtCLEVBQ2xCLHFCQUFxQixFQUNyQixjQUFjLEVBQ2QsY0FBYyxFQUNkLFlBQVksRUFDWiwyQkFBMkIsRUFDM0Isa0JBQWtCLEVBQ2xCLGtCQUFrQixFQUNsQixzQkFBc0IsRUFDdEIsa0JBQWtCLEVBQ2xCLENBQUMsa0JBQWtCLEVBQUU7SUFBRUMsUUFBUSxFQUFFO0VBQVUsQ0FBQyxDQUFDLEVBQzdDLGtCQUFrQixFQUNsQixZQUFZO0FBRWhCLENBQUMifQ==","map":{"version":3,"names":["module","exports","sourceType","allowImportExportEverywhere","allowReturnOutsideFunction","startLine","tokens","plugins","proposal"],"sourceRoot":"/Users/weiranli/.npm/_npx/a0dc7465aefb54f9/node_modules/jscodeshift/parser/","sources":["tsOptions.js"],"sourcesContent":["\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Options shared by the TypeScript and TSX parsers.\n */\nmodule.exports = {\n  sourceType: 'module',\n  allowImportExportEverywhere: true,\n  allowReturnOutsideFunction: true,\n  startLine: 1,\n  tokens: true,\n  plugins: [\n    'asyncGenerators',\n    'bigInt',\n    'classPrivateMethods',\n    'classPrivateProperties',\n    'classProperties',\n    'decorators-legacy',\n    'doExpressions',\n    'dynamicImport',\n    'exportDefaultFrom',\n    'exportExtensions',\n    'exportNamespaceFrom',\n    'functionBind',\n    'functionSent',\n    'importMeta',\n    'nullishCoalescingOperator',\n    'numericSeparator',\n    'objectRestSpread',\n    'optionalCatchBinding',\n    'optionalChaining',\n    ['pipelineOperator', { proposal: 'minimal' }],\n    'throwExpressions',\n    'typescript'\n  ],\n};\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACAA,MAAM,CAACC,OAAO,GAAG;EACfC,UAAU,EAAE,QAAQ;EACpBC,2BAA2B,EAAE,IAAI;EACjCC,0BAA0B,EAAE,IAAI;EAChCC,SAAS,EAAE,CAAC;EACZC,MAAM,EAAE,IAAI;EACZC,OAAO,EAAE,CACP,iBAAiB,EACjB,QAAQ,EACR,qBAAqB,EACrB,wBAAwB,EACxB,iBAAiB,EACjB,mBAAmB,EACnB,eAAe,EACf,eAAe,EACf,mBAAmB,EACnB,kBAAkB,EAClB,qBAAqB,EACrB,cAAc,EACd,cAAc,EACd,YAAY,EACZ,2BAA2B,EAC3B,kBAAkB,EAClB,kBAAkB,EAClB,sBAAsB,EACtB,kBAAkB,EAClB,CAAC,kBAAkB,EAAE;IAAEC,QAAQ,EAAE;EAAU,CAAC,CAAC,EAC7C,kBAAkB,EAClB,YAAY;AAEhB,CAAC"}},"mtime":1688594536103},"{\"assumptions\":{},\"sourceRoot\":\"/Users/weiranli/.npm/_npx/a0dc7465aefb54f9/node_modules/@next/codemod/transforms/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/private/var/folders/b4/nfmp_93x3b51md9m_8mh43g40000gn/T/second-repos/kotiya/next-js-12\",\"filename\":\"/Users/weiranli/.npm/_npx/a0dc7465aefb54f9/node_modules/@next/codemod/transforms/name-default-component.js\",\"targets\":{},\"cloneInputAst\":true,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/private/var/folders/b4/nfmp_93x3b51md9m_8mh43g40000gn/T/second-repos/kotiya/next-js-12\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"EnumDeclaration\":{\"enter\":[null]},\"EnumBooleanBody\":{\"enter\":[null]},\"EnumNumberBody\":{\"enter\":[null]},\"EnumStringBody\":{\"enter\":[null]},\"EnumSymbolBody\":{\"enter\":[null]},\"EnumBooleanMember\":{\"enter\":[null]},\"EnumNumberMember\":{\"enter\":[null]},\"EnumStringMember\":{\"enter\":[null]},\"EnumDefaultedMember\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.22.6:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst path_1 = require(\"path\");\nconst camelCase = value => {\n  const val = value.replace(/[-_\\s.]+(.)?/g, (_match, chr) => chr ? chr.toUpperCase() : '');\n  return val.slice(0, 1).toUpperCase() + val.slice(1);\n};\nconst isValidIdentifier = value => /^[a-zA-ZÀ-ÿ][0-9a-zA-ZÀ-ÿ]+$/.test(value);\nfunction transformer(file, api, options) {\n  const j = api.jscodeshift.withParser('tsx');\n  const root = j(file.source);\n  let hasModifications;\n  const returnsJSX = node => node.type === 'JSXElement' || node.type === 'BlockStatement' && j(node).find(j.ReturnStatement).some(path => {\n    var _a;\n    return ((_a = path.value.argument) === null || _a === void 0 ? void 0 : _a.type) === 'JSXElement';\n  });\n  const hasRootAsParent = path => {\n    var _a;\n    const program = path.parentPath.parentPath.parentPath.parentPath.parentPath;\n    return !program || ((_a = program === null || program === void 0 ? void 0 : program.value) === null || _a === void 0 ? void 0 : _a.type) === 'Program';\n  };\n  const nameFunctionComponent = path => {\n    const node = path.value;\n    if (!node.declaration) {\n      return;\n    }\n    const isArrowFunction = node.declaration.type === 'ArrowFunctionExpression' && returnsJSX(node.declaration.body);\n    const isAnonymousFunction = node.declaration.type === 'FunctionDeclaration' && !node.declaration.id;\n    if (!(isArrowFunction || isAnonymousFunction)) {\n      return;\n    }\n    const fileName = (0, path_1.basename)(file.path, (0, path_1.extname)(file.path));\n    let name = camelCase(fileName);\n    // If the generated name looks off, don't add a name\n    if (!isValidIdentifier(name)) {\n      return;\n    }\n    // Add `Component` to the end of the name if an identifier with the\n    // same name already exists\n    while (root.find(j.Identifier, {\n      name\n    }).some(hasRootAsParent)) {\n      // If the name is still duplicated then don't add a name\n      if (name.endsWith('Component')) {\n        return;\n      }\n      name += 'Component';\n    }\n    hasModifications = true;\n    if (isArrowFunction) {\n      path.insertBefore(j.variableDeclaration('const', [j.variableDeclarator(j.identifier(name), node.declaration)]));\n      node.declaration = j.identifier(name);\n    } else {\n      // Anonymous Function\n      ;\n      node.declaration.id = j.identifier(name);\n    }\n  };\n  root.find(j.ExportDefaultDeclaration).forEach(nameFunctionComponent);\n  return hasModifications ? root.toSource(options) : null;\n}\nexports.default = transformer;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["Object","defineProperty","exports","value","path_1","require","camelCase","val","replace","_match","chr","toUpperCase","slice","isValidIdentifier","test","transformer","file","api","options","j","jscodeshift","withParser","root","source","hasModifications","returnsJSX","node","type","find","ReturnStatement","some","path","_a","argument","hasRootAsParent","program","parentPath","nameFunctionComponent","declaration","isArrowFunction","body","isAnonymousFunction","id","fileName","basename","extname","name","Identifier","endsWith","insertBefore","variableDeclaration","variableDeclarator","identifier","ExportDefaultDeclaration","forEach","toSource","default"],"sourceRoot":"/Users/weiranli/.npm/_npx/a0dc7465aefb54f9/node_modules/@next/codemod/transforms/","sources":["name-default-component.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst path_1 = require(\"path\");\nconst camelCase = (value) => {\n    const val = value.replace(/[-_\\s.]+(.)?/g, (_match, chr) => chr ? chr.toUpperCase() : '');\n    return val.slice(0, 1).toUpperCase() + val.slice(1);\n};\nconst isValidIdentifier = (value) => /^[a-zA-ZÀ-ÿ][0-9a-zA-ZÀ-ÿ]+$/.test(value);\nfunction transformer(file, api, options) {\n    const j = api.jscodeshift.withParser('tsx');\n    const root = j(file.source);\n    let hasModifications;\n    const returnsJSX = (node) => node.type === 'JSXElement' ||\n        (node.type === 'BlockStatement' &&\n            j(node)\n                .find(j.ReturnStatement)\n                .some((path) => { var _a; return ((_a = path.value.argument) === null || _a === void 0 ? void 0 : _a.type) === 'JSXElement'; }));\n    const hasRootAsParent = (path) => {\n        var _a;\n        const program = path.parentPath.parentPath.parentPath.parentPath.parentPath;\n        return !program || ((_a = program === null || program === void 0 ? void 0 : program.value) === null || _a === void 0 ? void 0 : _a.type) === 'Program';\n    };\n    const nameFunctionComponent = (path) => {\n        const node = path.value;\n        if (!node.declaration) {\n            return;\n        }\n        const isArrowFunction = node.declaration.type === 'ArrowFunctionExpression' &&\n            returnsJSX(node.declaration.body);\n        const isAnonymousFunction = node.declaration.type === 'FunctionDeclaration' && !node.declaration.id;\n        if (!(isArrowFunction || isAnonymousFunction)) {\n            return;\n        }\n        const fileName = (0, path_1.basename)(file.path, (0, path_1.extname)(file.path));\n        let name = camelCase(fileName);\n        // If the generated name looks off, don't add a name\n        if (!isValidIdentifier(name)) {\n            return;\n        }\n        // Add `Component` to the end of the name if an identifier with the\n        // same name already exists\n        while (root.find(j.Identifier, { name }).some(hasRootAsParent)) {\n            // If the name is still duplicated then don't add a name\n            if (name.endsWith('Component')) {\n                return;\n            }\n            name += 'Component';\n        }\n        hasModifications = true;\n        if (isArrowFunction) {\n            path.insertBefore(j.variableDeclaration('const', [\n                j.variableDeclarator(j.identifier(name), node.declaration),\n            ]));\n            node.declaration = j.identifier(name);\n        }\n        else {\n            // Anonymous Function\n            ;\n            node.declaration.id = j.identifier(name);\n        }\n    };\n    root.find(j.ExportDefaultDeclaration).forEach(nameFunctionComponent);\n    return hasModifications ? root.toSource(options) : null;\n}\nexports.default = transformer;\n//# sourceMappingURL=name-default-component.js.map"],"mappings":"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"}},"mtime":1688594536251},"{\"assumptions\":{},\"sourceRoot\":\"/Users/weiranli/.npm/_npx/a0dc7465aefb54f9/node_modules/@next/codemod/transforms/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/private/var/folders/b4/nfmp_93x3b51md9m_8mh43g40000gn/T/second-repos/kotiya/next-js-12\",\"filename\":\"/Users/weiranli/.npm/_npx/a0dc7465aefb54f9/node_modules/@next/codemod/transforms/add-missing-react-import.js\",\"targets\":{},\"cloneInputAst\":true,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/private/var/folders/b4/nfmp_93x3b51md9m_8mh43g40000gn/T/second-repos/kotiya/next-js-12\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"EnumDeclaration\":{\"enter\":[null]},\"EnumBooleanBody\":{\"enter\":[null]},\"EnumNumberBody\":{\"enter\":[null]},\"EnumStringBody\":{\"enter\":[null]},\"EnumSymbolBody\":{\"enter\":[null]},\"EnumBooleanMember\":{\"enter\":[null]},\"EnumNumberMember\":{\"enter\":[null]},\"EnumStringMember\":{\"enter\":[null]},\"EnumDefaultedMember\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{},\"externalDependencies\":[]},{\"key\":\"transform-unicode-sets-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.22.6:development":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction addReactImport(j, root) {\n  // We create an import specifier, this is the value of an import, eg:\n  // import React from 'react'\n  // The specifier would be `React`\n  const ReactDefaultSpecifier = j.importDefaultSpecifier(j.identifier('React'));\n  // Check if this file is already importing `react`\n  // so that we can attach `React` to the existing import instead of creating a new `import` node\n  const originalReactImport = root.find(j.ImportDeclaration, {\n    source: {\n      value: 'react'\n    }\n  });\n  if (originalReactImport.length > 0) {\n    // Check if `React` is already imported. In that case we don't have to do anything\n    if (originalReactImport.find(j.ImportDefaultSpecifier).length > 0) {\n      return;\n    }\n    // Attach `React` to the existing `react` import node\n    originalReactImport.forEach(node => {\n      node.value.specifiers.unshift(ReactDefaultSpecifier);\n    });\n    return;\n  }\n  // Create import node\n  // import React from 'react'\n  const ReactImport = j.importDeclaration([ReactDefaultSpecifier], j.stringLiteral('react'));\n  // Find the Program, this is the top level AST node\n  const Program = root.find(j.Program);\n  // Attach the import at the top of the body\n  Program.forEach(node => {\n    node.value.body.unshift(ReactImport);\n  });\n}\nfunction transformer(file, api, options) {\n  const j = api.jscodeshift.withParser('tsx');\n  const root = j(file.source);\n  const hasReactImport = r => {\n    return r.find(j.ImportDefaultSpecifier, {\n      local: {\n        type: 'Identifier',\n        name: 'React'\n      }\n    }).length > 0;\n  };\n  const hasReactVariableUsage = r => {\n    return r.find(j.MemberExpression, {\n      object: {\n        type: 'Identifier',\n        name: 'React'\n      }\n    }).length > 0;\n  };\n  if (hasReactImport(root)) {\n    return;\n  }\n  if (hasReactVariableUsage(root)) {\n    addReactImport(j, root);\n  }\n  return root.toSource(options);\n}\nexports.default = transformer;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImFkZFJlYWN0SW1wb3J0IiwiaiIsInJvb3QiLCJSZWFjdERlZmF1bHRTcGVjaWZpZXIiLCJpbXBvcnREZWZhdWx0U3BlY2lmaWVyIiwiaWRlbnRpZmllciIsIm9yaWdpbmFsUmVhY3RJbXBvcnQiLCJmaW5kIiwiSW1wb3J0RGVjbGFyYXRpb24iLCJzb3VyY2UiLCJsZW5ndGgiLCJJbXBvcnREZWZhdWx0U3BlY2lmaWVyIiwiZm9yRWFjaCIsIm5vZGUiLCJzcGVjaWZpZXJzIiwidW5zaGlmdCIsIlJlYWN0SW1wb3J0IiwiaW1wb3J0RGVjbGFyYXRpb24iLCJzdHJpbmdMaXRlcmFsIiwiUHJvZ3JhbSIsImJvZHkiLCJ0cmFuc2Zvcm1lciIsImZpbGUiLCJhcGkiLCJvcHRpb25zIiwianNjb2Rlc2hpZnQiLCJ3aXRoUGFyc2VyIiwiaGFzUmVhY3RJbXBvcnQiLCJyIiwibG9jYWwiLCJ0eXBlIiwibmFtZSIsImhhc1JlYWN0VmFyaWFibGVVc2FnZSIsIk1lbWJlckV4cHJlc3Npb24iLCJvYmplY3QiLCJ0b1NvdXJjZSIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6Ii9Vc2Vycy93ZWlyYW5saS8ubnBtL19ucHgvYTBkYzc0NjVhZWZiNTRmOS9ub2RlX21vZHVsZXMvQG5leHQvY29kZW1vZC90cmFuc2Zvcm1zLyIsInNvdXJjZXMiOlsiYWRkLW1pc3NpbmctcmVhY3QtaW1wb3J0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZnVuY3Rpb24gYWRkUmVhY3RJbXBvcnQoaiwgcm9vdCkge1xuICAgIC8vIFdlIGNyZWF0ZSBhbiBpbXBvcnQgc3BlY2lmaWVyLCB0aGlzIGlzIHRoZSB2YWx1ZSBvZiBhbiBpbXBvcnQsIGVnOlxuICAgIC8vIGltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbiAgICAvLyBUaGUgc3BlY2lmaWVyIHdvdWxkIGJlIGBSZWFjdGBcbiAgICBjb25zdCBSZWFjdERlZmF1bHRTcGVjaWZpZXIgPSBqLmltcG9ydERlZmF1bHRTcGVjaWZpZXIoai5pZGVudGlmaWVyKCdSZWFjdCcpKTtcbiAgICAvLyBDaGVjayBpZiB0aGlzIGZpbGUgaXMgYWxyZWFkeSBpbXBvcnRpbmcgYHJlYWN0YFxuICAgIC8vIHNvIHRoYXQgd2UgY2FuIGF0dGFjaCBgUmVhY3RgIHRvIHRoZSBleGlzdGluZyBpbXBvcnQgaW5zdGVhZCBvZiBjcmVhdGluZyBhIG5ldyBgaW1wb3J0YCBub2RlXG4gICAgY29uc3Qgb3JpZ2luYWxSZWFjdEltcG9ydCA9IHJvb3QuZmluZChqLkltcG9ydERlY2xhcmF0aW9uLCB7XG4gICAgICAgIHNvdXJjZToge1xuICAgICAgICAgICAgdmFsdWU6ICdyZWFjdCcsXG4gICAgICAgIH0sXG4gICAgfSk7XG4gICAgaWYgKG9yaWdpbmFsUmVhY3RJbXBvcnQubGVuZ3RoID4gMCkge1xuICAgICAgICAvLyBDaGVjayBpZiBgUmVhY3RgIGlzIGFscmVhZHkgaW1wb3J0ZWQuIEluIHRoYXQgY2FzZSB3ZSBkb24ndCBoYXZlIHRvIGRvIGFueXRoaW5nXG4gICAgICAgIGlmIChvcmlnaW5hbFJlYWN0SW1wb3J0LmZpbmQoai5JbXBvcnREZWZhdWx0U3BlY2lmaWVyKS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgLy8gQXR0YWNoIGBSZWFjdGAgdG8gdGhlIGV4aXN0aW5nIGByZWFjdGAgaW1wb3J0IG5vZGVcbiAgICAgICAgb3JpZ2luYWxSZWFjdEltcG9ydC5mb3JFYWNoKChub2RlKSA9PiB7XG4gICAgICAgICAgICBub2RlLnZhbHVlLnNwZWNpZmllcnMudW5zaGlmdChSZWFjdERlZmF1bHRTcGVjaWZpZXIpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICAvLyBDcmVhdGUgaW1wb3J0IG5vZGVcbiAgICAvLyBpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG4gICAgY29uc3QgUmVhY3RJbXBvcnQgPSBqLmltcG9ydERlY2xhcmF0aW9uKFtSZWFjdERlZmF1bHRTcGVjaWZpZXJdLCBqLnN0cmluZ0xpdGVyYWwoJ3JlYWN0JykpO1xuICAgIC8vIEZpbmQgdGhlIFByb2dyYW0sIHRoaXMgaXMgdGhlIHRvcCBsZXZlbCBBU1Qgbm9kZVxuICAgIGNvbnN0IFByb2dyYW0gPSByb290LmZpbmQoai5Qcm9ncmFtKTtcbiAgICAvLyBBdHRhY2ggdGhlIGltcG9ydCBhdCB0aGUgdG9wIG9mIHRoZSBib2R5XG4gICAgUHJvZ3JhbS5mb3JFYWNoKChub2RlKSA9PiB7XG4gICAgICAgIG5vZGUudmFsdWUuYm9keS51bnNoaWZ0KFJlYWN0SW1wb3J0KTtcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIHRyYW5zZm9ybWVyKGZpbGUsIGFwaSwgb3B0aW9ucykge1xuICAgIGNvbnN0IGogPSBhcGkuanNjb2Rlc2hpZnQud2l0aFBhcnNlcigndHN4Jyk7XG4gICAgY29uc3Qgcm9vdCA9IGooZmlsZS5zb3VyY2UpO1xuICAgIGNvbnN0IGhhc1JlYWN0SW1wb3J0ID0gKHIpID0+IHtcbiAgICAgICAgcmV0dXJuIChyLmZpbmQoai5JbXBvcnREZWZhdWx0U3BlY2lmaWVyLCB7XG4gICAgICAgICAgICBsb2NhbDoge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdJZGVudGlmaWVyJyxcbiAgICAgICAgICAgICAgICBuYW1lOiAnUmVhY3QnLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSkubGVuZ3RoID4gMCk7XG4gICAgfTtcbiAgICBjb25zdCBoYXNSZWFjdFZhcmlhYmxlVXNhZ2UgPSAocikgPT4ge1xuICAgICAgICByZXR1cm4gKHIuZmluZChqLk1lbWJlckV4cHJlc3Npb24sIHtcbiAgICAgICAgICAgIG9iamVjdDoge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdJZGVudGlmaWVyJyxcbiAgICAgICAgICAgICAgICBuYW1lOiAnUmVhY3QnLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSkubGVuZ3RoID4gMCk7XG4gICAgfTtcbiAgICBpZiAoaGFzUmVhY3RJbXBvcnQocm9vdCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoaGFzUmVhY3RWYXJpYWJsZVVzYWdlKHJvb3QpKSB7XG4gICAgICAgIGFkZFJlYWN0SW1wb3J0KGosIHJvb3QpO1xuICAgIH1cbiAgICByZXR1cm4gcm9vdC50b1NvdXJjZShvcHRpb25zKTtcbn1cbmV4cG9ydHMuZGVmYXVsdCA9IHRyYW5zZm9ybWVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWRkLW1pc3NpbmctcmVhY3QtaW1wb3J0LmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFDWkEsTUFBTSxDQUFDQyxjQUFjLENBQUNDLE9BQU8sRUFBRSxZQUFZLEVBQUU7RUFBRUMsS0FBSyxFQUFFO0FBQUssQ0FBQyxDQUFDO0FBQzdELFNBQVNDLGNBQWNBLENBQUNDLENBQUMsRUFBRUMsSUFBSSxFQUFFO0VBQzdCO0VBQ0E7RUFDQTtFQUNBLE1BQU1DLHFCQUFxQixHQUFHRixDQUFDLENBQUNHLHNCQUFzQixDQUFDSCxDQUFDLENBQUNJLFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQztFQUM3RTtFQUNBO0VBQ0EsTUFBTUMsbUJBQW1CLEdBQUdKLElBQUksQ0FBQ0ssSUFBSSxDQUFDTixDQUFDLENBQUNPLGlCQUFpQixFQUFFO0lBQ3ZEQyxNQUFNLEVBQUU7TUFDSlYsS0FBSyxFQUFFO0lBQ1g7RUFDSixDQUFDLENBQUM7RUFDRixJQUFJTyxtQkFBbUIsQ0FBQ0ksTUFBTSxHQUFHLENBQUMsRUFBRTtJQUNoQztJQUNBLElBQUlKLG1CQUFtQixDQUFDQyxJQUFJLENBQUNOLENBQUMsQ0FBQ1Usc0JBQXNCLENBQUMsQ0FBQ0QsTUFBTSxHQUFHLENBQUMsRUFBRTtNQUMvRDtJQUNKO0lBQ0E7SUFDQUosbUJBQW1CLENBQUNNLE9BQU8sQ0FBRUMsSUFBSSxJQUFLO01BQ2xDQSxJQUFJLENBQUNkLEtBQUssQ0FBQ2UsVUFBVSxDQUFDQyxPQUFPLENBQUNaLHFCQUFxQixDQUFDO0lBQ3hELENBQUMsQ0FBQztJQUNGO0VBQ0o7RUFDQTtFQUNBO0VBQ0EsTUFBTWEsV0FBVyxHQUFHZixDQUFDLENBQUNnQixpQkFBaUIsQ0FBQyxDQUFDZCxxQkFBcUIsQ0FBQyxFQUFFRixDQUFDLENBQUNpQixhQUFhLENBQUMsT0FBTyxDQUFDLENBQUM7RUFDMUY7RUFDQSxNQUFNQyxPQUFPLEdBQUdqQixJQUFJLENBQUNLLElBQUksQ0FBQ04sQ0FBQyxDQUFDa0IsT0FBTyxDQUFDO0VBQ3BDO0VBQ0FBLE9BQU8sQ0FBQ1AsT0FBTyxDQUFFQyxJQUFJLElBQUs7SUFDdEJBLElBQUksQ0FBQ2QsS0FBSyxDQUFDcUIsSUFBSSxDQUFDTCxPQUFPLENBQUNDLFdBQVcsQ0FBQztFQUN4QyxDQUFDLENBQUM7QUFDTjtBQUNBLFNBQVNLLFdBQVdBLENBQUNDLElBQUksRUFBRUMsR0FBRyxFQUFFQyxPQUFPLEVBQUU7RUFDckMsTUFBTXZCLENBQUMsR0FBR3NCLEdBQUcsQ0FBQ0UsV0FBVyxDQUFDQyxVQUFVLENBQUMsS0FBSyxDQUFDO0VBQzNDLE1BQU14QixJQUFJLEdBQUdELENBQUMsQ0FBQ3FCLElBQUksQ0FBQ2IsTUFBTSxDQUFDO0VBQzNCLE1BQU1rQixjQUFjLEdBQUlDLENBQUMsSUFBSztJQUMxQixPQUFRQSxDQUFDLENBQUNyQixJQUFJLENBQUNOLENBQUMsQ0FBQ1Usc0JBQXNCLEVBQUU7TUFDckNrQixLQUFLLEVBQUU7UUFDSEMsSUFBSSxFQUFFLFlBQVk7UUFDbEJDLElBQUksRUFBRTtNQUNWO0lBQ0osQ0FBQyxDQUFDLENBQUNyQixNQUFNLEdBQUcsQ0FBQztFQUNqQixDQUFDO0VBQ0QsTUFBTXNCLHFCQUFxQixHQUFJSixDQUFDLElBQUs7SUFDakMsT0FBUUEsQ0FBQyxDQUFDckIsSUFBSSxDQUFDTixDQUFDLENBQUNnQyxnQkFBZ0IsRUFBRTtNQUMvQkMsTUFBTSxFQUFFO1FBQ0pKLElBQUksRUFBRSxZQUFZO1FBQ2xCQyxJQUFJLEVBQUU7TUFDVjtJQUNKLENBQUMsQ0FBQyxDQUFDckIsTUFBTSxHQUFHLENBQUM7RUFDakIsQ0FBQztFQUNELElBQUlpQixjQUFjLENBQUN6QixJQUFJLENBQUMsRUFBRTtJQUN0QjtFQUNKO0VBQ0EsSUFBSThCLHFCQUFxQixDQUFDOUIsSUFBSSxDQUFDLEVBQUU7SUFDN0JGLGNBQWMsQ0FBQ0MsQ0FBQyxFQUFFQyxJQUFJLENBQUM7RUFDM0I7RUFDQSxPQUFPQSxJQUFJLENBQUNpQyxRQUFRLENBQUNYLE9BQU8sQ0FBQztBQUNqQztBQUNBMUIsT0FBTyxDQUFDc0MsT0FBTyxHQUFHZixXQUFXIn0=","map":{"version":3,"names":["Object","defineProperty","exports","value","addReactImport","j","root","ReactDefaultSpecifier","importDefaultSpecifier","identifier","originalReactImport","find","ImportDeclaration","source","length","ImportDefaultSpecifier","forEach","node","specifiers","unshift","ReactImport","importDeclaration","stringLiteral","Program","body","transformer","file","api","options","jscodeshift","withParser","hasReactImport","r","local","type","name","hasReactVariableUsage","MemberExpression","object","toSource","default"],"sourceRoot":"/Users/weiranli/.npm/_npx/a0dc7465aefb54f9/node_modules/@next/codemod/transforms/","sources":["add-missing-react-import.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction addReactImport(j, root) {\n    // We create an import specifier, this is the value of an import, eg:\n    // import React from 'react'\n    // The specifier would be `React`\n    const ReactDefaultSpecifier = j.importDefaultSpecifier(j.identifier('React'));\n    // Check if this file is already importing `react`\n    // so that we can attach `React` to the existing import instead of creating a new `import` node\n    const originalReactImport = root.find(j.ImportDeclaration, {\n        source: {\n            value: 'react',\n        },\n    });\n    if (originalReactImport.length > 0) {\n        // Check if `React` is already imported. In that case we don't have to do anything\n        if (originalReactImport.find(j.ImportDefaultSpecifier).length > 0) {\n            return;\n        }\n        // Attach `React` to the existing `react` import node\n        originalReactImport.forEach((node) => {\n            node.value.specifiers.unshift(ReactDefaultSpecifier);\n        });\n        return;\n    }\n    // Create import node\n    // import React from 'react'\n    const ReactImport = j.importDeclaration([ReactDefaultSpecifier], j.stringLiteral('react'));\n    // Find the Program, this is the top level AST node\n    const Program = root.find(j.Program);\n    // Attach the import at the top of the body\n    Program.forEach((node) => {\n        node.value.body.unshift(ReactImport);\n    });\n}\nfunction transformer(file, api, options) {\n    const j = api.jscodeshift.withParser('tsx');\n    const root = j(file.source);\n    const hasReactImport = (r) => {\n        return (r.find(j.ImportDefaultSpecifier, {\n            local: {\n                type: 'Identifier',\n                name: 'React',\n            },\n        }).length > 0);\n    };\n    const hasReactVariableUsage = (r) => {\n        return (r.find(j.MemberExpression, {\n            object: {\n                type: 'Identifier',\n                name: 'React',\n            },\n        }).length > 0);\n    };\n    if (hasReactImport(root)) {\n        return;\n    }\n    if (hasReactVariableUsage(root)) {\n        addReactImport(j, root);\n    }\n    return root.toSource(options);\n}\nexports.default = transformer;\n//# sourceMappingURL=add-missing-react-import.js.map"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,SAASC,cAAcA,CAACC,CAAC,EAAEC,IAAI,EAAE;EAC7B;EACA;EACA;EACA,MAAMC,qBAAqB,GAAGF,CAAC,CAACG,sBAAsB,CAACH,CAAC,CAACI,UAAU,CAAC,OAAO,CAAC,CAAC;EAC7E;EACA;EACA,MAAMC,mBAAmB,GAAGJ,IAAI,CAACK,IAAI,CAACN,CAAC,CAACO,iBAAiB,EAAE;IACvDC,MAAM,EAAE;MACJV,KAAK,EAAE;IACX;EACJ,CAAC,CAAC;EACF,IAAIO,mBAAmB,CAACI,MAAM,GAAG,CAAC,EAAE;IAChC;IACA,IAAIJ,mBAAmB,CAACC,IAAI,CAACN,CAAC,CAACU,sBAAsB,CAAC,CAACD,MAAM,GAAG,CAAC,EAAE;MAC/D;IACJ;IACA;IACAJ,mBAAmB,CAACM,OAAO,CAAEC,IAAI,IAAK;MAClCA,IAAI,CAACd,KAAK,CAACe,UAAU,CAACC,OAAO,CAACZ,qBAAqB,CAAC;IACxD,CAAC,CAAC;IACF;EACJ;EACA;EACA;EACA,MAAMa,WAAW,GAAGf,CAAC,CAACgB,iBAAiB,CAAC,CAACd,qBAAqB,CAAC,EAAEF,CAAC,CAACiB,aAAa,CAAC,OAAO,CAAC,CAAC;EAC1F;EACA,MAAMC,OAAO,GAAGjB,IAAI,CAACK,IAAI,CAACN,CAAC,CAACkB,OAAO,CAAC;EACpC;EACAA,OAAO,CAACP,OAAO,CAAEC,IAAI,IAAK;IACtBA,IAAI,CAACd,KAAK,CAACqB,IAAI,CAACL,OAAO,CAACC,WAAW,CAAC;EACxC,CAAC,CAAC;AACN;AACA,SAASK,WAAWA,CAACC,IAAI,EAAEC,GAAG,EAAEC,OAAO,EAAE;EACrC,MAAMvB,CAAC,GAAGsB,GAAG,CAACE,WAAW,CAACC,UAAU,CAAC,KAAK,CAAC;EAC3C,MAAMxB,IAAI,GAAGD,CAAC,CAACqB,IAAI,CAACb,MAAM,CAAC;EAC3B,MAAMkB,cAAc,GAAIC,CAAC,IAAK;IAC1B,OAAQA,CAAC,CAACrB,IAAI,CAACN,CAAC,CAACU,sBAAsB,EAAE;MACrCkB,KAAK,EAAE;QACHC,IAAI,EAAE,YAAY;QAClBC,IAAI,EAAE;MACV;IACJ,CAAC,CAAC,CAACrB,MAAM,GAAG,CAAC;EACjB,CAAC;EACD,MAAMsB,qBAAqB,GAAIJ,CAAC,IAAK;IACjC,OAAQA,CAAC,CAACrB,IAAI,CAACN,CAAC,CAACgC,gBAAgB,EAAE;MAC/BC,MAAM,EAAE;QACJJ,IAAI,EAAE,YAAY;QAClBC,IAAI,EAAE;MACV;IACJ,CAAC,CAAC,CAACrB,MAAM,GAAG,CAAC;EACjB,CAAC;EACD,IAAIiB,cAAc,CAACzB,IAAI,CAAC,EAAE;IACtB;EACJ;EACA,IAAI8B,qBAAqB,CAAC9B,IAAI,CAAC,EAAE;IAC7BF,cAAc,CAACC,CAAC,EAAEC,IAAI,CAAC;EAC3B;EACA,OAAOA,IAAI,CAACiC,QAAQ,CAACX,OAAO,CAAC;AACjC;AACA1B,OAAO,CAACsC,OAAO,GAAGf,WAAW"}},"mtime":1688594536251}}